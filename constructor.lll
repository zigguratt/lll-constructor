;;; ---------------------------------------------------------------------------
;;; @title A constructor parameter test.
;;; @author Daniel Ellison <daniel@syrinx.net>

(seq

  ;; --------------------------------------------------------------------------
  ;; Start initialization.

  (include "macros.lll")

  ;; --------------------------------------------------------------------------
  ;; Compile the contract into `code-body` and record its length.

  (mstore code-length (lll
    (seq

      ;; ----------------------------------------------------------------------
      ;; @notice Returns contract heartbeat.
      ;; @dev Signature: getHeartbeat()

      (when (= function-id get-heartbeat)
        (seq
          (mstore return-data @@heartbeat)
          (return return-data 32)))

      ;; ----------------------------------------------------------------------
      ;; @notice Returns constructor parameters.
      ;; @dev Signature: getParameters()

      (when (= function-id get-parameters)
        (seq
          (mstore return-data @@parameters)
          (return return-data 32)))

      ;; ----------------------------------------------------------------------
      ;; @notice Fallback: No functions matched the function ID provided.

      (jump invalid-location))

    code-body))

  ;; --------------------------------------------------------------------------
  ;; Finish initialization.

  ;; Indicate that this contract is alive.
  (sstore heartbeat 0xBC614E) ; Decimal 12345678.

  ;; Copy the constructor parameters to memory.
  (codecopy 0x00 program-size 32)

  ;; Store the constructor parameters.
  (sstore parameters (mload 0x00))

  ; Return the compiled constructor code.
  (return code-body @code-length)

)
